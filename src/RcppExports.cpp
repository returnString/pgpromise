// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// attach_pool
void attach_pool(Rcpp::RObject conn, std::string host, int port, std::string db, std::string user, std::string password, int workers);
RcppExport SEXP _pgpromise_attach_pool(SEXP connSEXP, SEXP hostSEXP, SEXP portSEXP, SEXP dbSEXP, SEXP userSEXP, SEXP passwordSEXP, SEXP workersSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type conn(connSEXP);
    Rcpp::traits::input_parameter< std::string >::type host(hostSEXP);
    Rcpp::traits::input_parameter< int >::type port(portSEXP);
    Rcpp::traits::input_parameter< std::string >::type db(dbSEXP);
    Rcpp::traits::input_parameter< std::string >::type user(userSEXP);
    Rcpp::traits::input_parameter< std::string >::type password(passwordSEXP);
    Rcpp::traits::input_parameter< int >::type workers(workersSEXP);
    attach_pool(conn, host, port, db, user, password, workers);
    return R_NilValue;
END_RCPP
}
// collect_async_callback
void collect_async_callback(Rcpp::RObject conn, Rcpp::CharacterVector query, Rcpp::Function resolve, Rcpp::Function reject);
RcppExport SEXP _pgpromise_collect_async_callback(SEXP connSEXP, SEXP querySEXP, SEXP resolveSEXP, SEXP rejectSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::RObject >::type conn(connSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type query(querySEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type resolve(resolveSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type reject(rejectSEXP);
    collect_async_callback(conn, query, resolve, reject);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pgpromise_attach_pool", (DL_FUNC) &_pgpromise_attach_pool, 7},
    {"_pgpromise_collect_async_callback", (DL_FUNC) &_pgpromise_collect_async_callback, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_pgpromise(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
